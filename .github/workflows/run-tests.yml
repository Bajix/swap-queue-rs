name: CI

on:
  pull_request:
  push:
    branches:
      - master
      - 'feature/**'

jobs:
  test-tsan:
    name: Test with ThreadSanitizer on ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          # 64-bit Linux (kernel 2.6.32+, glibc 2.11+)
          - x86_64-unknown-linux-gnu
        rust: [nightly-2022-06-10]
    steps:
      - uses: actions/checkout@v2
      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: ${{ matrix.rust }}
          targets: ${{ matrix.target }}
      - run: rustup component add rust-src --toolchain ${{ matrix.rust }}-${{ matrix.target }}
      - run: TSAN_OPTIONS="suppressions=$(pwd)/tsan" RUSTFLAGS="-Z sanitizer=thread" cargo test -Z build-std --target=${{ matrix.target }}

  test-lsan:
    name: Test with LeakSanitizer on ${{ matrix.target }}
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          # 64-bit macOS (10.7+, Lion+)
          - x86_64-apple-darwin
        rust: [nightly-2022-06-10]
    steps:
      - uses: actions/checkout@v2
      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: ${{ matrix.rust }}
          targets: ${{ matrix.target }}
      - run: rustup component add rust-src --toolchain ${{ matrix.rust }}-${{ matrix.target }}
      - run: LSAN_OPTIONS="suppressions=$(pwd)/lsan" RUSTFLAGS="-Z sanitizer=leak" cargo test -Z build-std --target=${{ matrix.target }}

  test-miri:
    name: Test with Miri on ${{ matrix.target }}
    runs-on: ubuntu-latest
    env:
      MIRIFLAGS: -Zmiri-ignore-leaks
    strategy:
      fail-fast: false
      matrix:
        target:
          # 64-bit Linux (kernel 2.6.32+, glibc 2.11+)
          - x86_64-unknown-linux-gnu
        rust: [nightly-2022-06-10]
    steps:
      - uses: actions/checkout@v2
      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: ${{ matrix.rust }}
          targets: ${{ matrix.target }}
      - run: rustup component add miri
      - run: cargo miri test -Z build-std --target=${{ matrix.target }}
